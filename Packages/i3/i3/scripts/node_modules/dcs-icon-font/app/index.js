#! /usr/bin/env node
'use strict';

var _wfConfig = require('./config/wf-config');

var config = _interopRequireWildcard(_wfConfig);

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _builder = require('./builder');

var builder = _interopRequireWildcard(_builder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var argv = (0, _minimist2.default)(process.argv); // get all the specified args in the CLI
var options = config.getConfig(argv); // get the setup for the web font generator

/**
 * Generate the icon font
 */
builder.build(options).then(function (result) {
  console.log(result);
}).catch(function (err) {
  console.log('failed', err);
});